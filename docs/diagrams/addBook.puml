@startuml
actor User
participant InputHandler
participant InputParser
participant BookList
participant Formatter
participant Storage

User -> InputHandler: "add-book BOOK_TITLE a/AUTHOR cat/CATEGORY cond/CONDITION loc/LOCATION [note/NOTE]"
activate InputHandler

InputHandler -> InputParser: extractCommandArgs(userInputLine)
deactivate InputHandler
activate InputParser

InputParser --> InputHandler: commandArgs[]
deactivate InputParser
activate InputHandler

alt commandArgs[0] == add-book
    InputHandler -> InputHandler : addBook()
    activate InputHandler

alt commandArgs.length >= 2
    InputHandler -> InputParser: extractAddBookArgs(commandArgs[1])
    activate InputParser

    InputParser --> InputHandler: parsedArgs [BOOK_TITLE, AUTHOR, CATEGORY, CONDITION, LOCATION, NOTE]
    deactivate InputParser

    InputHandler -> BookList: findBookByTitle(BOOK_TITLE)
    activate BookList

    BookList --> InputHandler: Book or null
    deactivate BookList

    alt Book == null
        InputHandler -> BookList: addBook(new Book(BOOK_TITLE, AUTHOR, CATEGORY, CONDITION, LOCATION, NOTE))
        activate BookList
        BookList --> InputHandler: Book added
        deactivate BookList

        InputHandler -> Formatter: printBorderedMessage("New book added: {BOOK_TITLE}")
        activate Formatter

        Formatter --> InputHandler
        deactivate Formatter

        InputHandler -> Storage: saveInventory(bookList)
        activate Storage

        Storage --> InputHandler
        deactivate Storage


    else
        InputHandler -> Formatter: printBorderedMessage("Book already exists in inventory: {BOOK_TITLE}")
        activate Formatter
        Formatter --> InputHandler
        deactivate Formatter
    end

    else
        InputHandler -> Formatter: printBorderedMessage("Invalid format for add-book")
        activate Formatter
        Formatter --> InputHandler
        deactivate Formatter
    end

InputHandler --> InputHandler
deactivate InputHandler

else
    note over InputHandler : other commands
end

deactivate InputHandler
InputHandler --> User
@enduml