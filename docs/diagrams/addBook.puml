@startuml
actor User
participant InputHandler as ":InputHandler"
participant InputParser as ":InputParser"
participant BookList as ":BookList"
participant Book as ":Book"
participant Formatter as ":Formatter"
participant Storage as ":Storage"

User -> InputHandler: "add-book BOOK_TITLE \n a/AUTHOR cat/CATEGORY \n cond/CONDITION loc/LOCATION [note/NOTE]"
activate InputHandler

InputHandler -> InputParser: extractCommandArgs(userInputLine)
activate InputParser

InputParser --> InputHandler: commandArgs[]
deactivate InputParser

alt commandArgs[0] == add-book
    InputHandler -> InputHandler : addBook()
    activate InputHandler

alt commandArgs.length >= 2
    InputHandler -> InputParser: extractAddBookArgs(commandArgs[1])
    activate InputParser

    InputParser --> InputHandler: parsedArgs
    deactivate InputParser

    InputHandler -> BookList: findBookByTitle(BOOK_TITLE)
    activate BookList

    BookList --> InputHandler: Book or null
    deactivate BookList

    alt Book == null
        InputHandler -> Book ** : Book(parsedArgs)
        activate Book 

        Book --> InputHandler : newBook
        deactivate Book

        InputHandler -> BookList: addBook(newBook)
        activate BookList


        BookList --> InputHandler: Book added
        deactivate BookList

        InputHandler -> Formatter: printBorderedMessage("New book added: {BOOK_TITLE}")
        activate Formatter

        Formatter --> InputHandler
        deactivate Formatter

        InputHandler -> Storage: saveInventory(bookList)
        activate Storage

        Storage --> InputHandler
        deactivate Storage


    else else
        InputHandler -> Formatter: printBorderedMessage("Book already exists in inventory: {BOOK_TITLE}")
        activate Formatter
        Formatter --> InputHandler
        deactivate Formatter
    end

    else else
        InputHandler -> Formatter: printBorderedMessage("Invalid format for add-book")
        activate Formatter
        Formatter --> InputHandler
        deactivate Formatter
    end

InputHandler --> InputHandler
deactivate InputHandler

else else
    note over InputHandler : other commands
end

InputHandler --> User
deactivate InputHandler
@enduml